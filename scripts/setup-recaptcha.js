const fs = require('fs');
const path = require('path');

console.log('üîß Configuration des cl√©s reCAPTCHA...\n');

// Fonction pour mettre √† jour les cl√©s reCAPTCHA
function updateRecaptchaKeys(siteKey, secretKey) {
  const envPath = path.join(__dirname, '../.env.local');
  
  if (!fs.existsSync(envPath)) {
    console.log('‚ùå Fichier .env.local non trouv√©');
    return false;
  }
  
  let content = fs.readFileSync(envPath, 'utf8');
  
  // Mettre √† jour la cl√© site
  content = content.replace(
    /NEXT_PUBLIC_RECAPTCHA_SITE_KEY=.*/,
    `NEXT_PUBLIC_RECAPTCHA_SITE_KEY=${siteKey}`
  );
  
  // Mettre √† jour la cl√© secr√®te
  content = content.replace(
    /RECAPTCHA_SECRET_KEY=.*/,
    `RECAPTCHA_SECRET_KEY=${secretKey}`
  );
  
  fs.writeFileSync(envPath, content, 'utf8');
  console.log('‚úÖ Cl√©s reCAPTCHA mises √† jour !');
  return true;
}

// Fonction pour v√©rifier le format des cl√©s
function validateRecaptchaKeys(siteKey, secretKey) {
  const errors = [];
  
  if (!siteKey || siteKey.length < 20) {
    errors.push('Site Key trop courte ou vide');
  }
  
  if (!secretKey || secretKey.length < 20) {
    errors.push('Secret Key trop courte ou vide');
  }
  
  if (!siteKey.startsWith('6Lf')) {
    errors.push('Site Key ne commence pas par "6Lf"');
  }
  
  if (!secretKey.startsWith('6Lf')) {
    errors.push('Secret Key ne commence pas par "6Lf"');
  }
  
  return errors;
}

// Fonction pour cr√©er un script de test
function createTestScript() {
  const testScript = `
// Script de test reCAPTCHA
// √Ä ex√©cuter dans la console du navigateur

function testRecaptchaConfig() {
  console.log('üß™ Test de la configuration reCAPTCHA...');
  
  // V√©rifier que la cl√© site est charg√©e
  const siteKey = process.env.NEXT_PUBLIC_RECAPTCHA_SITE_KEY;
  console.log('üìù Site Key:', siteKey ? siteKey.substring(0, 10) + '...' : 'Non d√©finie');
  
  if (!siteKey) {
    console.log('‚ùå Site Key non d√©finie');
    return;
  }
  
  // V√©rifier le format
  if (!siteKey.startsWith('6Lf')) {
    console.log('‚ùå Format Site Key incorrect');
    return;
  }
  
  console.log('‚úÖ Site Key correcte');
  
  // Test de chargement du script reCAPTCHA
  if (typeof grecaptcha !== 'undefined') {
    console.log('‚úÖ Script reCAPTCHA charg√©');
  } else {
    console.log('‚ö†Ô∏è Script reCAPTCHA non charg√©');
  }
}

// Ex√©cuter le test
testRecaptchaConfig();
`;

  const testPath = path.join(__dirname, '../test-recaptcha-config.js');
  fs.writeFileSync(testPath, testScript);
  console.log('üìÑ Script de test cr√©√©: test-recaptcha-config.js');
}

console.log('üìã Instructions pour configurer reCAPTCHA:');
console.log('\n1. üîó Obtenir les cl√©s reCAPTCHA:');
console.log('   - Allez sur https://www.google.com/recaptcha/admin');
console.log('   - S√©lectionnez votre site ou cr√©ez-en un nouveau');
console.log('   - Copiez la "Cl√© du site" (Site Key)');
console.log('   - Copiez la "Cl√© secr√®te" (Secret Key)');

console.log('\n2. üìù Format des cl√©s:');
console.log('   - Site Key: Commence par "6Lf..." (ex: 6LfAbCdEf...)');
console.log('   - Secret Key: Commence par "6Lf..." (ex: 6LfGhIjKl...)');
console.log('   - Les deux cl√©s doivent correspondre au m√™me site');

console.log('\n3. üîß Configuration:');
console.log('   - Ouvrez le fichier .env.local');
console.log('   - Remplacez les valeurs par vos vraies cl√©s');
console.log('   - Sauvegardez le fichier');

console.log('\n4. üîÑ Red√©marrage:');
console.log('   - Arr√™tez le serveur Next.js (Ctrl+C)');
console.log('   - Relancez: npm run dev');
console.log('   - Testez le reCAPTCHA');

console.log('\n5. üß™ Test:');
console.log('   - Ouvrez la console du navigateur (F12)');
console.log('   - Copiez le contenu de test-recaptcha-config.js');
console.log('   - Collez-le dans la console et appuyez sur Entr√©e');

console.log('\nüí° Probl√®mes courants:');
console.log('‚ùå "Cl√© de site non valide": Site Key incorrecte ou non d√©finie');
console.log('‚ùå "Cl√© secr√®te non valide": Secret Key incorrecte ou non d√©finie');
console.log('‚ùå "Site non autoris√©": Site Key ne correspond pas au domaine');
console.log('‚ùå "reCAPTCHA non charg√©": Probl√®me de chargement du script');

console.log('\nüîß Solutions:');
console.log('1. V√©rifiez que les cl√©s correspondent au bon site');
console.log('2. V√©rifiez que le domaine est autoris√© dans reCAPTCHA');
console.log('3. Red√©marrez le serveur apr√®s modification');
console.log('4. Videz le cache du navigateur');

// Cr√©er le script de test
createTestScript();

console.log('\n‚ú® Configuration termin√©e !');
console.log('üéØ Suivez les instructions ci-dessus pour configurer vos cl√©s reCAPTCHA');

